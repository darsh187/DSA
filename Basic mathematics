#include <bits/stdc++.h>
using namespace std;

int counting(int n)
{
    int count = 0;
    while(n > 0)
    {
        count = count + 1;
        n = n / 10;
    }
    return count;
}
int revNum(int n)
{
    int rev = 0;
    while(n > 0)
    {
        int lastdigit = n % 10;
        rev = (rev * 10) + lastdigit;
        n = n / 10;
    }
    return rev;
}
int checkPalindrome(int n)
{
    int ogNum = n;
    int rev = 0;
    while(n > 0)
    {
        int lastdigit = n % 10;
        rev = (rev * 10) + lastdigit;
        n = n / 10;
    }
    if(rev == ogNum) return true;
    else return false;
}
int isArmStrongNum(int n)
{
    int dup = n;
    int sum = 0;
    while(n > 0)
    {
        int lastdigit = n % 10;
        sum = sum + (lastdigit*lastdigit*lastdigit);
        n = n / 10;
    }
    if(sum == dup) return true;
    else return false;
}
int main()
{
    int m;
    cin >> m;
    // int x = counting(m);
    // int x = revNum(m);
    // int x = checkPalindrome(m);
    int x = isArmStrongNum(m);
    cout << x;
    return 0;
}
